//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Thu 06-Dec-2012 by the VDM++ to JAVA Code Generator
// (v8.0 - Mon 09-Jul-2007 09:32:40)
//
// Supported compilers:
// jdk1.4
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=NO

import jp.co.csk.vdm.toolbox.VDM.*;
import java.util.*;
import jp.co.csk.vdm.toolbox.VDM.jdk.*;
// ***** VDMTOOLS END Name=imports



public class FragmentsTest extends Test {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp


// ***** VDMTOOLS START Name=FragmentsTestSentinel KEEP=NO
  class FragmentsTestSentinel extends TestSentinel {

    public final int actorWithFragments = 1;

    public final int objectWithFragments = 2;

    public final int nr_functions = 3;


    public FragmentsTestSentinel () throws CGException {}


    public FragmentsTestSentinel (EvaluatePP instance) throws CGException {
      init(nr_functions, instance);
    }

  }
// ***** VDMTOOLS END Name=FragmentsTestSentinel
;

// ***** VDMTOOLS START Name=setSentinel KEEP=NO
  public void setSentinel () {
    try {
      sentinel = new FragmentsTestSentinel(this);
    }
    catch (CGException e) {
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=setSentinel


// ***** VDMTOOLS START Name=FragmentsTest KEEP=NO
  public FragmentsTest () throws CGException {}
// ***** VDMTOOLS END Name=FragmentsTest


// ***** VDMTOOLS START Name=actorWithFragments KEEP=NO
  public void actorWithFragments () throws CGException {

    sentinel.entering(((FragmentsTestSentinel) sentinel).actorWithFragments);
    try {

      Diagram d = new Diagram();
      Actor a = new Actor(new String("anActor"));
      Fragment f = new Fragment(new String("aName"), new String("aCharacteristic"));
      Fragment f2 = new Fragment(new String("aName2"), new String("aCharacteristic2"));
      d.addActors((Actor) a);
      d.addFragments((Fragment) f);
      d.addFragmentToLifeline((Lifeline) a, (Fragment) f);
      d.addFragments((Fragment) f2);
      d.addFragmentToLifeline((Lifeline) a, (Fragment) f2);
      Boolean tmpArg_v_19 = null;
      Boolean var1_20 = null;
      Boolean var1_21 = null;
      Boolean var1_22 = null;
      Boolean var1_23 = null;
      Boolean var1_24 = null;
      String var1_25 = null;
      var1_25 = a.name;
      var1_24 = new Boolean(UTIL.equals(var1_25, new String("anActor")));
      {
        if ((var1_23 = var1_24).booleanValue()) {

          Boolean var2_28 = null;
          String var1_29 = null;
          var1_29 = f.name;
          var2_28 = new Boolean(UTIL.equals(var1_29, new String("aName")));
          var1_23 = var2_28;
        }
      }
      {
        if ((var1_22 = var1_23).booleanValue()) {

          Boolean var2_32 = null;
          String var1_33 = null;
          var1_33 = f.characteristic;
          var2_32 = new Boolean(UTIL.equals(var1_33, new String("aCharacteristic")));
          var1_22 = var2_32;
        }
      }
      {
        if ((var1_21 = var1_22).booleanValue()) {

          Boolean var2_36 = null;
          HashMap var2_38 = new HashMap();
          var2_38 = a.fragments;
          var2_36 = new Boolean(var2_38.containsValue(f));
          var1_21 = var2_36;
        }
      }
      {
        if ((var1_20 = var1_21).booleanValue()) {

          Boolean var2_40 = null;
          HashSet var2_42 = new HashSet();
          var2_42 = d.actors;
          var2_40 = new Boolean(var2_42.contains(a));
          var1_20 = var2_40;
        }
      }
      {
        if ((tmpArg_v_19 = var1_20).booleanValue()) {

          Boolean var2_44 = null;
          HashSet var2_46 = new HashSet();
          var2_46 = d.fragments;
          var2_44 = new Boolean(var2_46.contains(f));
          tmpArg_v_19 = var2_44;
        }
      }
      Assert(tmpArg_v_19);
      d.remFragments((Fragment) f);
      Boolean tmpArg_v_51 = null;
      Boolean var1_52 = null;
      Boolean var1_53 = null;
      Boolean var1_54 = null;
      HashSet var2_56 = new HashSet();
      HashMap unArg_57 = new HashMap();
      unArg_57 = a.fragments;
      var2_56.clear();
      var2_56.addAll(unArg_57.values());
      var1_54 = new Boolean(!var2_56.contains(f));
      {
        if ((var1_53 = var1_54).booleanValue()) {

          Boolean var2_59 = null;
          HashSet var2_61 = new HashSet();
          var2_61 = d.fragments;
          var2_59 = new Boolean(!var2_61.contains(f));
          var1_53 = var2_59;
        }
      }
      {
        if ((var1_52 = var1_53).booleanValue()) {

          Boolean var2_63 = null;
          HashMap var2_65 = new HashMap();
          var2_65 = a.fragments;
          var2_63 = new Boolean(var2_65.containsValue(f2));
          var1_52 = var2_63;
        }
      }
      {
        if ((tmpArg_v_51 = var1_52).booleanValue()) {

          Boolean var2_67 = null;
          HashSet var2_69 = new HashSet();
          var2_69 = d.fragments;
          var2_67 = new Boolean(var2_69.contains(f2));
          tmpArg_v_51 = var2_67;
        }
      }
      Assert(tmpArg_v_51);
    }
    finally {
      sentinel.leaving(((FragmentsTestSentinel) sentinel).actorWithFragments);
    }
  }
// ***** VDMTOOLS END Name=actorWithFragments


// ***** VDMTOOLS START Name=objectWithFragments KEEP=NO
  public void objectWithFragments () throws CGException {

    sentinel.entering(((FragmentsTestSentinel) sentinel).objectWithFragments);
    try {

      Diagram d = new Diagram();
      vdm_Object o = new vdm_Object(new String("anObject"));
      Fragment f = new Fragment(new String("aName"), new String("aCharacteristic"));
      d.addObjects((vdm_Object) o);
      d.addFragments((Fragment) f);
      d.addFragmentToLifeline((Lifeline) o, (Fragment) f);
      Boolean tmpArg_v_12 = null;
      Boolean var1_13 = null;
      Boolean var1_14 = null;
      Boolean var1_15 = null;
      Boolean var1_16 = null;
      Boolean var1_17 = null;
      String var1_18 = null;
      var1_18 = o.name;
      var1_17 = new Boolean(UTIL.equals(var1_18, new String("anObject")));
      {
        if ((var1_16 = var1_17).booleanValue()) {

          Boolean var2_21 = null;
          String var1_22 = null;
          var1_22 = f.name;
          var2_21 = new Boolean(UTIL.equals(var1_22, new String("aName")));
          var1_16 = var2_21;
        }
      }
      {
        if ((var1_15 = var1_16).booleanValue()) {

          Boolean var2_25 = null;
          String var1_26 = null;
          var1_26 = f.characteristic;
          var2_25 = new Boolean(UTIL.equals(var1_26, new String("aCharacteristic")));
          var1_15 = var2_25;
        }
      }
      {
        if ((var1_14 = var1_15).booleanValue()) {

          Boolean var2_29 = null;
          HashMap var2_31 = new HashMap();
          var2_31 = o.fragments;
          var2_29 = new Boolean(var2_31.containsValue(f));
          var1_14 = var2_29;
        }
      }
      {
        if ((var1_13 = var1_14).booleanValue()) {

          Boolean var2_33 = null;
          HashSet var2_35 = new HashSet();
          var2_35 = d.objects;
          var2_33 = new Boolean(var2_35.contains(o));
          var1_13 = var2_33;
        }
      }
      {
        if ((tmpArg_v_12 = var1_13).booleanValue()) {

          Boolean var2_37 = null;
          HashSet var2_39 = new HashSet();
          var2_39 = d.fragments;
          var2_37 = new Boolean(var2_39.contains(f));
          tmpArg_v_12 = var2_37;
        }
      }
      Assert(tmpArg_v_12);
      d.remFragments((Fragment) f);
      Boolean tmpArg_v_44 = null;
      Boolean var1_45 = null;
      HashSet var2_47 = new HashSet();
      HashMap unArg_48 = new HashMap();
      unArg_48 = o.fragments;
      var2_47.clear();
      var2_47.addAll(unArg_48.values());
      var1_45 = new Boolean(!var2_47.contains(f));
      {
        if ((tmpArg_v_44 = var1_45).booleanValue()) {

          Boolean var2_50 = null;
          HashSet var2_52 = new HashSet();
          var2_52 = d.fragments;
          var2_50 = new Boolean(!var2_52.contains(f));
          tmpArg_v_44 = var2_50;
        }
      }
      Assert(tmpArg_v_44);
    }
    finally {
      sentinel.leaving(((FragmentsTestSentinel) sentinel).objectWithFragments);
    }
  }
// ***** VDMTOOLS END Name=objectWithFragments

}
;
